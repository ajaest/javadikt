//    Copyright (C) 2010  Luis Alfonso Arce Gonz√°lez, ajaest[@]gmail.com
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.

package net.ajaest.jdk.gui.windows;

import net.ajaest.jdk.core.main.Messages;
import net.ajaest.jdk.core.winHandlers.KanjiInfoWH;
import net.ajaest.jdk.data.kanji.KanjiTag;

//TODO: javadoc
public class StrokeOrderFontWindow extends javax.swing.JFrame {

	private static final long serialVersionUID = -973573230369632909L;
	private KanjiInfoWH kiwh;
    private KanjiTag kt;

    /** Creates new form StrokeOrderFontWindow */
    public StrokeOrderFontWindow(KanjiInfoWH kiwh, KanjiTag kt) {

        this.kiwh = kiwh;
        this.kt = kt;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        __strokeOrderFontPanel = new javax.swing.JPanel();
        __strokeOrderFontLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(String.format(Messages.get(Messages.STROKEORDERINFO_name), kt.toString()));
        setIconImages(kiwh.getIcons());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        __strokeOrderFontPanel.setBackground(java.awt.Color.white);
        __strokeOrderFontPanel.setLayout(null);

        __strokeOrderFontLabel.setFont(kiwh.getStrokeOrderFont());
        __strokeOrderFontLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        __strokeOrderFontLabel.setText(kt.toString());
        __strokeOrderFontPanel.add(__strokeOrderFontLabel);
        __strokeOrderFontLabel.setBounds(0, 0, 280, 280);

        getContentPane().add(__strokeOrderFontPanel, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-288)/2, (screenSize.height-308)/2, 288, 308);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        kiwh.windowClosed(this);
    }//GEN-LAST:event_formWindowClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel __strokeOrderFontLabel;
    private javax.swing.JPanel __strokeOrderFontPanel;
    // End of variables declaration//GEN-END:variables

	public KanjiTag getKanjiTag() {
		return kt;
	}

	//    
	// public static void main(String... args){
	// Kainad kiw = new Kainad();
	//
	// StrokeOrderFontWindow asd = new StrokeOrderFontWindow(kiw, new
	// Kanji(0x9E1E));
	// asd.setVisible(true);
	// }
	//
	// static class Kainad extends KanjiInfoWH{
	// public Kainad(){
	// super(null);
	// }
	//
	// @Override
	// public List<Image> getIcons(){
	// return new ArrayList<Image>();
	// }
	// }
}
