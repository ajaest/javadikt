//    Copyright (C) 2010  Luis Alfonso Arce Gonz√°lez, ajaest[@]gmail.com
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.

package net.ajaest.jdk.gui.windows;

//TODO: javadoc
import net.ajaest.jdk.core.main.Messages;
import net.ajaest.jdk.core.winHandlers.KanjiInfoWH;
import net.ajaest.jdk.data.kanji.RadicalTag;
import net.ajaest.jdk.data.kanji.RadicalVariantTag;
import net.ajaest.jdk.gui.auxi.RadicalInfoPanel;

/**
 *
 * @author ajaest10
 */
public class RadicalInfoWindow extends javax.swing.JFrame {

	private static final long serialVersionUID = -464969972456576351L;

	private KanjiInfoWH kiwe;
	private RadicalTag radical;

    /** Creates new form RadicalInfoWindow */
	public RadicalInfoWindow(KanjiInfoWH kiwe, RadicalTag rad) {

        this.kiwe = kiwe;
		this.radical = rad;
        
		this.setIconImages(kiwe.getIcons());

        StringBuilder title = new StringBuilder();

        RadicalVariantTag firstUnicode = null;
		for (RadicalVariantTag r : radical.getVariants()) {
            if(r.getUnicode()!=null){
                firstUnicode = r;
                break;
            }
        }

        if(firstUnicode!=null){
            title.append(new String(Character.toChars(firstUnicode.getUnicode())));
            title.append(" - ");
            title.append(firstUnicode.getNumber());
        }

        this.setTitle(String.format(Messages.get(Messages.PANELRADICALINFO_name), title.toString()));

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        MainPanel.setLayout(new java.awt.GridLayout(1, getColumsCount()));
        getContentPane().add(MainPanel, java.awt.BorderLayout.CENTER);
		for (RadicalVariantTag rad : radical.getVariants()) {

            MainPanel.add(new RadicalInfoPanel(kiwe, rad, kiwe.getOptions().getRomanized()));
        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        kiwe.windowClosed(this);
    }//GEN-LAST:event_formWindowClosed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RadicalInfoWindow(new KanjiInfoWH(null),null).setVisible(true);
            }
        });
    }

    private int getColumsCount(){

		return radical.getVariants().size();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    // End of variables declaration//GEN-END:variables

	public RadicalTag getRadical() {

		return radical;
	}
}
